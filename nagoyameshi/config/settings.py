"""
Django settings for nagoyameshi project.

Generated by 'django-admin startproject' using Django 5.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = 'django-insecure-89_jdaz^^dh+*10hy^0tdm-qqipp^-fqey(04)f3)c4s@w5p8x'
SECRET_KEY = 'syc6*!g3^07jankkb%55qn$&a4s%lp8o56ftvg!96i9y64g22d'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

# ALLOWED_HOSTS = []
ALLOWED_HOSTS = [os.environ.get("HOST")]
# ALLOWED_HOSTS = ['localhost', '127.0.0.1', '.herokuapp.com']

# Application definition

INSTALLED_APPS = [
    'users',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'nagoyameshi',
    'bootstrapform',
]

AUTH_USER_MODEL = "users.User"  # カスタムユーザーを認証用ユーザーとして登録

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',  # Heroku静的ファイル対応
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
        "init_command": "SET foreign_key_checks = 0;",
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'ja'

TIME_ZONE = 'Asia/Tokyo'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
# STATICFILES_DIRS = [BASE_DIR / 'nagoyameshi' / 'static',]
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# 画像関連の設定
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media_local'

FRONTED_URL = "http://127.0.0.1:8000/"

# Eメールでのアカウント本登録
# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
# EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
# EMAIL_HOST = "smtp.gmail.com"
# EMAIL_PORT = 587
# EMAIL_USE_TLS = True
# EMAIL_HOST_USER = 'sa.0304piyo@gmail.com'
# EMAIL_HOST_PASSWORD = 'a9i9m3i4'
# EMAIL_HOST_PASSWORD = os.getenv('SENDGRID_API_KEY')  # Herokuの環境変数

# print('デバッグ', EMAIL_HOST_PASSWORD)
# DEFAULT_FROM_EMAIL = "aimi.suzuki@outlook.jp"  # 任意のメールアドレス

# SendGridを使用
EMAIL_BACKEND = 'sendgrid_backend.SendgridBackend'
# 送信元(ローカル)
DEFAULT_FROM_EMAIL = "sa.0304piyo@gmail.com"  # 任意のメールアドレス
# 送信元(本番)
# DEFAULT_FROM_EMAIL = os.getenv('DEFAULT_FROM_EMAIL')  # 任意のメールアドレス
# SendGridのAPIキー(ローカル)

# SendGridのAPIキー(本番)
SENDGRID_API_KEY = os.getenv('SENDGRID_API_KEY')
SENDGRID_ECHO_TO_STDOUT = True

# 実際にメール送信
SENDGRID_SANDBOX_MODE_IN_DEBUG = False


# 決済機能
STRIPE_PUBLIC_KEY = "pk_test_51Qg2iYDLLsCJxWoZRgyyRJQizmjxu9a6DfzPqiBrUj0V2VK2yo8YJfdMoqFprSnPygOkY4r4xw20VIUeJU5BPkUw00dVTbpIMK" # 公開キー
STRIPE_SECRET_KEY = "sk_test_51Qg2iYDLLsCJxWoZXotY4EEPzbtHKMgBaVN2TNFSqV3XC2QiyLgL4kvAjKJDODIVBaVJlrRqET6C1Hzb3hB7woDi00MtjzKzw4" # シークレットキーキー
STRIPE_PRICE_ID         = "price_1Qg2lGDLLsCJxWoZ5Ke8Ey5f" # API_ID
STRIPE_WEBHOOK_SECRET = "whsec_qSQe9AgJbsxhKK7BdBLq0vvcyVZ0qvIg"
# STRIPE_PUBLIC_KEY = os.environ.get('STRIPE_PUBLIC_KEY')
# STRIPE_SECRET_KEY = os.environ.get('STRIPE_SECRET_KEY')
# STRIPE_PRICE_ID = os.environ.get('STRIPE_PRICE_ID')
# STRIPE_WEBHOOK_SECRET = os.environ.get('STRIPE_WEBHOOK_SECRET')
